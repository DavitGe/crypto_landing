@import '../styles/variables';

.example-component {
  background: color('white');
  border: map-get($borders, 'thick') solid color('black');
  box-shadow: shadow('base');
  padding: spacing('6');
  position: relative;
  overflow: hidden;
  transition: all transition('normal');
  
  &:hover {
    transform: translate(-4px, -4px);
    box-shadow: shadow('lg');
  }
  
  // Neo-Brutalism: Add a geometric accent
  &::before {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    width: 60px;
    height: 60px;
    background: color('neon-yellow');
    border: map-get($borders, 'thick') solid color('black');
    transform: rotate(45deg) translate(30px, -30px);
    z-index: 1;
  }
  
  &:hover {
    transform: translate(-6px, -6px);
    box-shadow: shadow('xl');
    
    &::before {
      background: color('neon-cyan');
      transform: rotate(45deg) translate(30px, -30px) scale(1.1);
      transition: all transition('bounce');
    }
  }
}

.example-header {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  margin-bottom: spacing('4');
  position: relative;
  z-index: 2;
}

.example-title {
  font-size: font-size('2xl');
  font-weight: map-get($font-weights, 'bold');
  color: color('black');
  margin: 0;
  line-height: map-get($line-heights, 'tight');
}

.example-badge {
  background: color('neon-pink');
  color: color('white');
  font-size: font-size('xs');
  font-weight: map-get($font-weights, 'bold');
  padding: spacing('1') spacing('2');
  border: map-get($borders, 'normal') solid color('black');
  box-shadow: shadow('sm');
  text-transform: uppercase;
  letter-spacing: 0.05em;
  
  // Add jitter animation on hover
  &:hover {
    animation: jitter 0.3s ease-in-out infinite;
  }
}

.example-description {
  font-size: font-size('base');
  line-height: map-get($line-heights, 'relaxed');
  color: color('gray-800');
  margin-bottom: spacing('6');
  position: relative;
  z-index: 2;
}

.example-actions {
  display: flex;
  flex-direction: column;
  gap: spacing('4');
  position: relative;
  z-index: 2;
}

.example-stats {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: spacing('4');
  padding: spacing('4');
  background: color('pastel-cyan');
  border: map-get($borders, 'normal') solid color('black');
  box-shadow: shadow('inner');
}

.stat {
  text-align: center;
  
  .stat-value {
    display: block;
    font-size: font-size('xl');
    font-weight: map-get($font-weights, 'bold');
    color: color('black');
    font-family: map-get($fonts, 'heading');
  }
  
  .stat-label {
    display: block;
    font-size: font-size('sm');
    color: color('gray-800');
    text-transform: uppercase;
    letter-spacing: 0.05em;
    margin-top: spacing('1');
  }
}

// Responsive adjustments
@media (min-width: map-get($breakpoints, 'md')) {
  .example-component {
    padding: spacing('8');
  }
  
  .example-title {
    font-size: font-size('3xl');
  }
  
  .example-actions {
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
  }
  
  .example-stats {
    grid-template-columns: 1fr 1fr;
    min-width: 200px;
  }
}

// Animation keyframes (if not already defined globally)
@keyframes jitter {
  0%, 100% {
    transform: translate(0, 0);
  }
  25% {
    transform: translate(-2px, 2px);
  }
  50% {
    transform: translate(2px, -2px);
  }
  75% {
    transform: translate(-2px, -2px);
  }
} 