@import 'variables';
@import 'global';

// ============================================================================
// APP LAYOUT STYLES
// ============================================================================

.app {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  background: linear-gradient(
    135deg,
    color('pastel-pink') 0%,
    color('pastel-cyan') 25%,
    color('pastel-yellow') 50%,
    color('pastel-purple') 75%,
    color('pastel-orange') 100%
  );
  background-attachment: fixed;
}

.main-content {
  flex: 1;
  width: 100%;
  overflow-x: hidden;
  padding-top: 80px; // Account for fixed header height
}

// ============================================================================
// PAGE TRANSITIONS
// ============================================================================

.page-enter {
  opacity: 0;
  transform: translateY(20px);
}

.page-enter-active {
  opacity: 1;
  transform: translateY(0);
  transition: all transition('normal');
}

.page-exit {
  opacity: 1;
  transform: translateY(0);
}

.page-exit-active {
  opacity: 0;
  transform: translateY(-20px);
  transition: all transition('normal');
}

// ============================================================================
// SCROLLBAR STYLING (Neo-Brutalism)
// ============================================================================

::-webkit-scrollbar {
  width: 16px;
}

::-webkit-scrollbar-track {
  background: color('white');
  border: map-get($borders, 'normal') solid color('black');
  box-shadow: shadow('inner');
}

::-webkit-scrollbar-thumb {
  background: color('neon-pink');
  border: map-get($borders, 'normal') solid color('black');
  box-shadow: shadow('sm');
  
  &:hover {
    background: color('neon-cyan');
  }
}

::-webkit-scrollbar-corner {
  background: color('white');
  border: map-get($borders, 'normal') solid color('black');
}

// ============================================================================
// SELECTION STYLING
// ============================================================================

::selection {
  background: color('neon-yellow');
  color: color('black');
}

::-moz-selection {
  background: color('neon-yellow');
  color: color('black');
}

// ============================================================================
// FOCUS INDICATORS
// ============================================================================

*:focus-visible {
  outline: map-get($borders, 'thick') solid color('neon-cyan');
  outline-offset: spacing('2');
}

// ============================================================================
// LOADING STATES
// ============================================================================

.loading {
  display: inline-block;
  width: 20px;
  height: 20px;
  border: map-get($borders, 'thick') solid color('gray-200');
  border-top: map-get($borders, 'thick') solid color('neon-pink');
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

// ============================================================================
// UTILITY CLASSES FOR LAYOUT
// ============================================================================

.section {
  padding: spacing('20') 0;
  
  @media (min-width: map-get($breakpoints, 'md')) {
    padding: spacing('32') 0;
  }
}

.section-alt {
  background-color: color('white');
  border-top: map-get($borders, 'thick') solid color('black');
  border-bottom: map-get($borders, 'thick') solid color('black');
}

.card {
  background: color('white');
  border: map-get($borders, 'thick') solid color('black');
  box-shadow: shadow('base');
  padding: spacing('6');
  
  &:hover {
    transform: translate(-4px, -4px);
    box-shadow: shadow('lg');
    transition: all transition('normal');
  }
}

.card-alt {
  background: color('pastel-pink');
  border: map-get($borders, 'thick') solid color('black');
  box-shadow: shadow('base');
  padding: spacing('6');
  
  &:hover {
    background: color('pastel-cyan');
    transform: translate(-4px, -4px);
    box-shadow: shadow('lg');
    transition: all transition('normal');
  }
}

// ============================================================================
// GRID SYSTEM
// ============================================================================

.grid-cols-1 { grid-template-columns: repeat(1, minmax(0, 1fr)); }
.grid-cols-2 { grid-template-columns: repeat(2, minmax(0, 1fr)); }
.grid-cols-3 { grid-template-columns: repeat(3, minmax(0, 1fr)); }
.grid-cols-4 { grid-template-columns: repeat(4, minmax(0, 1fr)); }
.grid-cols-5 { grid-template-columns: repeat(5, minmax(0, 1fr)); }
.grid-cols-6 { grid-template-columns: repeat(6, minmax(0, 1fr)); }
.grid-cols-12 { grid-template-columns: repeat(12, minmax(0, 1fr)); }

// Responsive grid columns
@media (min-width: map-get($breakpoints, 'sm')) {
  .sm\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0, 1fr)); }
  .sm\:grid-cols-3 { grid-template-columns: repeat(3, minmax(0, 1fr)); }
  .sm\:grid-cols-4 { grid-template-columns: repeat(4, minmax(0, 1fr)); }
}

@media (min-width: map-get($breakpoints, 'md')) {
  .md\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0, 1fr)); }
  .md\:grid-cols-3 { grid-template-columns: repeat(3, minmax(0, 1fr)); }
  .md\:grid-cols-4 { grid-template-columns: repeat(4, minmax(0, 1fr)); }
  .md\:grid-cols-6 { grid-template-columns: repeat(6, minmax(0, 1fr)); }
}

@media (min-width: map-get($breakpoints, 'lg')) {
  .lg\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0, 1fr)); }
  .lg\:grid-cols-3 { grid-template-columns: repeat(3, minmax(0, 1fr)); }
  .lg\:grid-cols-4 { grid-template-columns: repeat(4, minmax(0, 1fr)); }
  .lg\:grid-cols-6 { grid-template-columns: repeat(6, minmax(0, 1fr)); }
  .lg\:grid-cols-12 { grid-template-columns: repeat(12, minmax(0, 1fr)); }
}

@media (min-width: map-get($breakpoints, 'xl')) {
  .xl\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0, 1fr)); }
  .xl\:grid-cols-3 { grid-template-columns: repeat(3, minmax(0, 1fr)); }
  .xl\:grid-cols-4 { grid-template-columns: repeat(4, minmax(0, 1fr)); }
  .xl\:grid-cols-6 { grid-template-columns: repeat(6, minmax(0, 1fr)); }
  .xl\:grid-cols-12 { grid-template-columns: repeat(12, minmax(0, 1fr)); }
} 